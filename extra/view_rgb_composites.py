"""
Visualize some of the idealized Hyper Suprime-Cam (HSC) synthetic images
generated in the example from the README as g,r,i composite images.

Author: Vicente Rodriguez-Gomez <vrodgom.astro@gmail.com>
"""
import numpy as np
import matplotlib.pyplot as plt
from astropy.io import fits
from astropy.visualization import LogStretch, simple_norm

# HSC g,r,i,z,Y bands correspond to layers 0,1,2,3,4
bands = [0, 1, 2]


def create_composite(subfind_id):
    """
    Return g,r,i composite for a given object.
    """
    # Read data
    with fits.open('broadband_%d.fits' % (subfind_id,)) as hdulist:
        data = hdulist[0].data

    # Prepare composite
    shape = (data.shape[1], data.shape[2], len(bands))
    composite = np.zeros(shape, dtype=np.float32)
    for i, band in enumerate(bands):
        composite[:, :, -(i + 1)] = data[band, :, :]

    # Tweak colors a bit
    composite[:, :, 1] *= 0.9  # reduce green component
    composite[:, :, 2] *= 1.4  # enhance blue component
        
    return composite


if __name__ == '__main__':
    # Subfind IDs generated by the example in the README:
    subfind_ids = [
        0,
        9162,
        17714,
        29896,
        40848,
        51666,
        56043,
        60225,
        65502,
        69432,
        72962,
        107965,
        126425,
    ]

    # View the first nine composite images with imshow:
    fig = plt.figure(figsize=(9, 9))
    fig.subplots_adjust(left=0.0, right=1.0, bottom=0.0, top=1.0, hspace=0.02, wspace=0.02)
    for k, subfind_id in enumerate(subfind_ids[:9]):
        ax = fig.add_subplot(3, 3, k + 1)
        composite = create_composite(subfind_id)
        norm = simple_norm(composite, stretch='log', log_a=10000)
        ax.imshow(norm(composite), origin='lower')
        ax.get_xaxis().set_visible(False)
        ax.get_yaxis().set_visible(False)

    fig.savefig('hsc_idealized.png')
    plt.close(fig)
